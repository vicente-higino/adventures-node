import { Adventure } from "./index";
import { pickRandom } from "../utils/misc";

const spyItems = [
    "encrypted flash drive",
    "laser watch",
    "invisible ink pen",
    "micro drone",
    "hacking kit",
    "forged passport",
    "tracking bug",
    "EMP grenade",
    "voice modulator",
    "spy camera",
];
const spyEnemies = [
    "double agent",
    "rival operative",
    "crime syndicate",
    "rogue AI",
    "mercenary team",
    "corrupt official",
    "blackmailer",
    "arms dealer",
    "hacker collective",
    "traitor",
];
const spyLocations = [
    "embassy gala",
    "private jet",
    "secure vault",
    "rooftop rendezvous",
    "underground bunker",
    "luxury casino",
    "abandoned warehouse",
    "city safehouse",
    "border checkpoint",
    "secret lab",
];
const spyEvents = [
    "code red alert",
    "data breach",
    "midnight exchange",
    "explosive sabotage",
    "chase sequence",
    "identity swap",
    "power blackout",
    "hostage rescue",
    "double-cross",
    "dead drop",
];
export const spyAdventures: Adventure[] = [
    {
        description: () => `A ${pickRandom(spyEvents)} unfolds at the ${pickRandom(spyLocations)}, agents must act fast to complete their mission.`,
        winMessages: [
            name => `${name} retrieves the ${pickRandom(spyItems)} and escapes undetected.`,
            name => `${name} outwits the ${pickRandom(spyEnemies)} and secures vital intel.`,
            name => `${name} completes the mission and is awarded a ${pickRandom(spyItems)}.`,
            name => `${name} plants a ${pickRandom(spyItems)} and gathers crucial evidence.`,
            name => `${name} impersonates a ${pickRandom(spyEnemies)} and infiltrates the ${pickRandom(spyLocations)}.`,
            name => `${name} cracks the security at the ${pickRandom(spyLocations)} and escapes with secrets.`,
            name => `${name} disables a ${pickRandom(spyItems)} just in time and saves the operation.`,
            name => `${name} intercepts a ${pickRandom(spyEvents)} and turns the tables on the enemy.`,
        ],
        loseMessages: [
            name => `${name} is exposed by the ${pickRandom(spyEnemies)} and must flee.`,
            name => `${name} is caught in a ${pickRandom(spyEvents)} and loses the target.`,
            name => `${name} is captured at the ${pickRandom(spyLocations)} and interrogated.`,
            name => `${name} triggers an alarm at the ${pickRandom(spyLocations)} and is forced to abort.`,
            name => `${name} is double-crossed by a ${pickRandom(spyEnemies)} and loses the ${pickRandom(spyItems)}.`,
            name => `${name} is outsmarted during a ${pickRandom(spyEvents)} and the mission fails.`,
            name => `${name} is tracked by a ${pickRandom(spyItems)} and compromised.`,
            name => `${name} is caught in a trap set by the ${pickRandom(spyEnemies)}.`,
        ],
    },
    {
        description: () =>
            `During a ${pickRandom(spyEvents)}, agents must infiltrate the ${pickRandom(spyLocations)} to recover a stolen ${pickRandom(spyItems)}.`,
        winMessages: [
            name => `${name} recovers the ${pickRandom(spyItems)} and vanishes into the night.`,
            name => `${name} hacks the security system and leaves no trace.`,
            name => `${name} convinces a ${pickRandom(spyEnemies)} to switch sides.`,
            name => `${name} escapes the ${pickRandom(spyLocations)} with the mission complete.`,
            name => `${name} finds a hidden cache and upgrades their ${pickRandom(spyItems)}.`,
            name => `${name} disables the alarm system and slips away unnoticed.`,
            name => `${name} deciphers a secret code and finds the real objective.`,
            name => `${name} convinces the ${pickRandom(spyEnemies)} to call off their pursuit.`,
        ],
        loseMessages: [
            name => `${name} is recognized by a ${pickRandom(spyEnemies)} and must abort.`,
            name => `${name} is locked out of the ${pickRandom(spyLocations)} and fails the mission.`,
            name => `${name} is caught in a ${pickRandom(spyEvents)} and loses the ${pickRandom(spyItems)}.`,
            name => `${name} is betrayed by an informant and captured.`,
            name => `${name} is left stranded on the rooftop after a failed extraction.`,
            name => `${name} is outnumbered by the ${pickRandom(spyEnemies)} and surrenders.`,
            name => `${name} loses contact with HQ during a ${pickRandom(spyEvents)}.`,
            name => `${name} is forced to abandon the mission due to a malfunctioning ${pickRandom(spyItems)}.`,
        ],
    },
    {
        description: () => `A ${pickRandom(spyEnemies)} has set a trap at the ${pickRandom(spyLocations)} during a ${pickRandom(spyEvents)}.`,
        winMessages: [
            name => `${name} spots the trap and turns it against the enemy.`,
            name => `${name} uses a ${pickRandom(spyItems)} to escape unharmed.`,
            name => `${name} disables the ${pickRandom(spyEnemies)} and secures the area.`,
            name => `${name} rescues a fellow agent and completes the mission.`,
            name => `${name} escapes through the ventilation system with the evidence.`,
            name => `${name} triggers a diversion and sneaks out during the chaos.`,
            name => `${name} escapes through a hidden passage in the ${pickRandom(spyLocations)}.`,
            name => `${name} uses a ${pickRandom(spyItems)} to create a perfect distraction.`,
        ],
        loseMessages: [
            name => `${name} falls into the trap and is forced to surrender.`,
            name => `${name} loses their ${pickRandom(spyItems)} and is compromised.`,
            name => `${name} is surrounded by the ${pickRandom(spyEnemies)} and must retreat.`,
            name => `${name} is caught in the crossfire and barely escapes.`,
            name => `${name} is knocked out by a tranquilizer dart.`,
            name => `${name} is left behind as the enemy escapes.`,
            name => `${name} is locked in the ${pickRandom(spyLocations)} with no escape route.`,
            name => `${name} is identified by facial recognition and flagged as a threat.`,
        ],
    },
    {
        description: () => `A ${pickRandom(spyItems)} must be delivered to the ${pickRandom(spyLocations)} before a ${pickRandom(spyEvents)} occurs.`,
        winMessages: [
            name => `${name} delivers the ${pickRandom(spyItems)} just in time.`,
            name => `${name} evades a ${pickRandom(spyEnemies)} and completes the drop.`,
            name => `${name} uses quick thinking to bypass security.`,
            name => `${name} blends in at the ${pickRandom(spyLocations)} and succeeds.`,
            name => `${name} swaps the ${pickRandom(spyItems)} with a decoy and fools everyone.`,
            name => `${name} completes the handoff during a ${pickRandom(spyEvents)} without being noticed.`,
        ],
        loseMessages: [
            name => `${name} is delayed by a ${pickRandom(spyEvents)} and misses the deadline.`,
            name => `${name} is intercepted by a ${pickRandom(spyEnemies)} and loses the package.`,
            name => `${name} is identified by surveillance and must abort.`,
            name => `${name} is forced to destroy the ${pickRandom(spyItems)} to avoid capture.`,
            name => `${name} is caught in a checkpoint and detained.`,
            name => `${name} is forced to go dark after a failed delivery.`,
        ],
    },
];
