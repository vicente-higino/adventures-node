import { Adventure } from "./index";
import { pickRandom } from "../utils/misc";

const steampunkItems = [
    "clockwork heart",
    "steam gauntlet",
    "brass monocle",
    "alchemical vial",
    "gear-driven pistol",
    "aether lamp",
    "mechanical bird",
    "cogwheel amulet",
    "pneumatic boots",
    "airship ticket",
];
const steampunkEnemies = [
    "automatons",
    "sky pirates",
    "mad inventor",
    "smog beast",
    "clockwork soldiers",
    "rogue airship",
    "steam golem",
    "rival engineer",
    "smoke wraiths",
    "gear gremlins",
];
const steampunkLocations = [
    "airship dock",
    "smoggy alley",
    "clocktower",
    "underground lab",
    "brass foundry",
    "steamworks",
    "sky bridge",
    "mechanical garden",
    "inventor's guild",
    "aether bazaar",
];
const steampunkEvents = [
    "boiler explosion",
    "aether storm",
    "gear jam",
    "smog surge",
    "invention contest",
    "airship race",
    "power outage",
    "mechanical riot",
    "runaway automaton",
    "mysterious signal",
];
export const steampunkAdventures: Adventure[] = [
    {
        description: () =>
            `A ${pickRandom(steampunkEvents)} disrupts the ${pickRandom(steampunkLocations)}, inventors and adventurers rush to restore order and claim lost tech.`,
        winMessages: [
            name => `${name} repairs a ${pickRandom(steampunkItems)} and earns a reward.`,
            name => `${name} defeats ${pickRandom(steampunkEnemies)} and salvages a ${pickRandom(steampunkItems)}.`,
            name => `${name} uncovers a secret in the ${pickRandom(steampunkLocations)}.`,
            name => `${name} outsmarts ${pickRandom(steampunkEnemies)} and escapes with a ${pickRandom(steampunkItems)}.`,
            name => `${name} wins the ${pickRandom(steampunkEvents)} and is celebrated at the ${pickRandom(steampunkLocations)}.`,
            name => `${name} discovers a hidden passage in the ${pickRandom(steampunkLocations)}.`,
            name => `${name} invents a new gadget using a ${pickRandom(steampunkItems)}.`,
            name => `${name} negotiates peace with ${pickRandom(steampunkEnemies)}.`,
            name => `${name} finds a lost map in the ${pickRandom(steampunkLocations)}.`,
            name => `${name} is awarded a medal at the ${pickRandom(steampunkLocations)}.`,
        ],
        loseMessages: [
            name => `${name} is caught in a ${pickRandom(steampunkEvents)} and must retreat.`,
            name => `${name} is sabotaged by ${pickRandom(steampunkEnemies)}.`,
            name => `${name} gets lost in the ${pickRandom(steampunkLocations)} and finds nothing.`,
            name => `${name} loses a ${pickRandom(steampunkItems)} to ${pickRandom(steampunkEnemies)}.`,
            name => `${name} is delayed by a ${pickRandom(steampunkEvents)}.`,
            name => `${name} is outbid at the ${pickRandom(steampunkLocations)} auction.`,
            name => `${name} is tricked by a ${pickRandom(steampunkEnemies)} imposter.`,
            name => `${name} is forced to abandon a ${pickRandom(steampunkItems)}.`,
            name => `${name} is injured during a ${pickRandom(steampunkEvents)}.`,
            name => `${name} is denied entry to the ${pickRandom(steampunkLocations)}.`,
        ],
    },
    {
        description: () =>
            `The ${pickRandom(steampunkLocations)} is hosting a secret meeting, but ${pickRandom(steampunkEnemies)} plan to crash the event.`,
        winMessages: [
            name => `${name} sneaks past the guards and learns the secret.`,
            name => `${name} exposes the plot of ${pickRandom(steampunkEnemies)}.`,
            name => `${name} wins a duel with a ${pickRandom(steampunkEnemies)} agent.`,
            name => `${name} recovers a stolen ${pickRandom(steampunkItems)}.`,
            name => `${name} deciphers a coded message using a ${pickRandom(steampunkItems)}.`,
            name => `${name} convinces the council at the ${pickRandom(steampunkLocations)}.`,
            name => `${name} disables a trap set by ${pickRandom(steampunkEnemies)}.`,
            name => `${name} escapes with vital blueprints from the ${pickRandom(steampunkLocations)}.`,
            name => `${name} outwits a rival at the secret meeting.`,
            name => `${name} is honored for bravery at the ${pickRandom(steampunkLocations)}.`,
        ],
        loseMessages: [
            name => `${name} is discovered by ${pickRandom(steampunkEnemies)} and chased away.`,
            name => `${name} is caught in a web of intrigue and confusion.`,
            name => `${name} loses a crucial clue at the ${pickRandom(steampunkLocations)}.`,
            name => `${name} is framed by a ${pickRandom(steampunkEnemies)} spy.`,
            name => `${name} is locked out of the secret meeting.`,
            name => `${name} is forced to flee empty-handed.`,
            name => `${name} is distracted by a malfunctioning ${pickRandom(steampunkItems)}.`,
            name => `${name} is outmaneuvered by a cunning ${pickRandom(steampunkEnemies)}.`,
            name => `${name} is caught in a trap at the ${pickRandom(steampunkLocations)}.`,
            name => `${name} is left in the dark after a ${pickRandom(steampunkEvents)}.`,
        ],
    },
    {
        description: () =>
            `A legendary ${pickRandom(steampunkItems)} is rumored to be hidden in the ${pickRandom(steampunkLocations)}, but danger lurks everywhere.`,
        winMessages: [
            name => `${name} finds the legendary ${pickRandom(steampunkItems)}.`,
            name => `${name} defeats the guardian ${pickRandom(steampunkEnemies)}.`,
            name => `${name} solves the riddle of the ${pickRandom(steampunkLocations)}.`,
            name => `${name} escapes a deadly ${pickRandom(steampunkEvents)}.`,
            name => `${name} teams up with locals to uncover the treasure.`,
            name => `${name} disables a trap with quick thinking.`,
            name => `${name} discovers a hidden vault in the ${pickRandom(steampunkLocations)}.`,
            name => `${name} outsmarts a rival treasure hunter.`,
            name => `${name} uses a ${pickRandom(steampunkItems)} to unlock a secret door.`,
            name => `${name} is celebrated as a hero in the ${pickRandom(steampunkLocations)}.`,
        ],
        loseMessages: [
            name => `${name} is ambushed by ${pickRandom(steampunkEnemies)}.`,
            name => `${name} is trapped by a collapsing floor in the ${pickRandom(steampunkLocations)}.`,
            name => `${name} is blinded by a sudden ${pickRandom(steampunkEvents)}.`,
            name => `${name} is forced to abandon the quest.`,
            name => `${name} is tricked by a false clue.`,
            name => `${name} is caught in a maze of gears and pipes.`,
            name => `${name} loses the trail in the ${pickRandom(steampunkLocations)}.`,
            name => `${name} is robbed by ${pickRandom(steampunkEnemies)}.`,
            name => `${name} is injured by a malfunctioning ${pickRandom(steampunkItems)}.`,
            name => `${name} is left empty-handed after a wild chase.`,
        ],
    },
];
