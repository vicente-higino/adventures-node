import { Adventure } from "./index";
import { pickRandom } from "../utils/misc";

const heroItems = [
    "power gauntlet",
    "mysterious serum",
    "utility belt",
    "energy shield",
    "grappling hook",
    "invisibility cloak",
    "jet boots",
    "telepathy chip",
    "force field generator",
    "super suit",
];
const heroEnemies = [
    "archvillain",
    "mad scientist",
    "alien invader",
    "giant robot",
    "shadow syndicate",
    "mutant beast",
    "rogue AI",
    "time thief",
    "elemental monster",
    "corrupt official",
];
const heroLocations = [
    "city rooftop",
    "secret lair",
    "downtown plaza",
    "abandoned warehouse",
    "power plant",
    "underground lab",
    "sky fortress",
    "hidden bunker",
    "subway tunnel",
    "museum of history",
];
const heroEvents = [
    "bank heist",
    "hostage crisis",
    "alien attack",
    "power outage",
    "meteor strike",
    "mass breakout",
    "time anomaly",
    "giant robot rampage",
    "chemical spill",
    "superpower surge",
];
export const heroAdventures: Adventure[] = [
    {
        description: () => `A ${pickRandom(heroEvents)} erupts at the ${pickRandom(heroLocations)}, heroes must act fast to save the day.`,
        winMessages: [
            name => `${name} foils the ${pickRandom(heroEnemies)} and recovers a ${pickRandom(heroItems)}.`,
            name => `${name} saves civilians and is awarded a ${pickRandom(heroItems)}.`,
            name => `${name} outsmarts the ${pickRandom(heroEnemies)} and secures the area.`,
            name => `${name} uses a ${pickRandom(heroItems)} to turn the tide at the ${pickRandom(heroLocations)}.`,
            name => `${name} defeats the ${pickRandom(heroEnemies)} during the ${pickRandom(heroEvents)}.`,
            name => `${name} rescues hostages from the ${pickRandom(heroEnemies)} with a ${pickRandom(heroItems)}.`,
            name => `${name} prevents disaster at the ${pickRandom(heroLocations)} using a ${pickRandom(heroItems)}.`,
            name => `${name} disables the ${pickRandom(heroEnemies)}'s weapon with a ${pickRandom(heroItems)}.`,
            name => `${name} inspires hope during the ${pickRandom(heroEvents)} and restores peace.`,
            name => `${name} captures the ${pickRandom(heroEnemies)} and secures a ${pickRandom(heroItems)} as evidence.`,
        ],
        loseMessages: [
            name => `${name} is overpowered by the ${pickRandom(heroEnemies)} and must retreat.`,
            name => `${name} is caught in the chaos of the ${pickRandom(heroEvents)}.`,
            name => `${name} is injured while fighting at the ${pickRandom(heroLocations)}.`,
            name => `${name} loses their ${pickRandom(heroItems)} during the battle.`,
            name => `${name} is trapped by the ${pickRandom(heroEnemies)} at the ${pickRandom(heroLocations)}.`,
            name => `${name} is delayed by a malfunctioning ${pickRandom(heroItems)}.`,
            name => `${name} is outnumbered by the ${pickRandom(heroEnemies)}'s minions.`,
            name => `${name} is forced to abandon the ${pickRandom(heroLocations)} during the ${pickRandom(heroEvents)}.`,
            name => `${name} is outsmarted by the ${pickRandom(heroEnemies)} and loses ground.`,
            name => `${name} is separated from their team at the ${pickRandom(heroLocations)}.`,
        ],
    },
    {
        description: () => `The ${pickRandom(heroEnemies)} has taken over the ${pickRandom(heroLocations)} during a ${pickRandom(heroEvents)}.`,
        winMessages: [
            name => `${name} disables the ${pickRandom(heroEnemies)}'s device with a ${pickRandom(heroItems)}.`,
            name => `${name} sneaks into the ${pickRandom(heroLocations)} using a ${pickRandom(heroItems)} and saves the day.`,
            name => `${name} rallies the citizens during the ${pickRandom(heroEvents)} and defeats the ${pickRandom(heroEnemies)}.`,
            name => `${name} uses a ${pickRandom(heroItems)} to outwit the ${pickRandom(heroEnemies)}.`,
            name => `${name} traps the ${pickRandom(heroEnemies)} in the ${pickRandom(heroLocations)}.`,
            name => `${name} turns the tide of the ${pickRandom(heroEvents)} with a ${pickRandom(heroItems)}.`,
            name => `${name} uncovers the ${pickRandom(heroEnemies)}'s plot at the ${pickRandom(heroLocations)}.`,
            name => `${name} rescues hostages from the ${pickRandom(heroEnemies)} using a ${pickRandom(heroItems)}.`,
            name => `${name} foils the ${pickRandom(heroEnemies)}'s escape with a ${pickRandom(heroItems)}.`,
            name => `${name} restores order at the ${pickRandom(heroLocations)} after the ${pickRandom(heroEvents)}.`,
        ],
        loseMessages: [
            name => `${name} is captured by the ${pickRandom(heroEnemies)} in the ${pickRandom(heroLocations)}.`,
            name => `${name} loses their ${pickRandom(heroItems)} during the ${pickRandom(heroEvents)}.`,
            name => `${name} is outsmarted by the ${pickRandom(heroEnemies)}.`,
            name => `${name} is forced to retreat from the ${pickRandom(heroLocations)}.`,
            name => `${name} is caught in a trap set by the ${pickRandom(heroEnemies)}.`,
            name => `${name} is overwhelmed by the chaos of the ${pickRandom(heroEvents)}.`,
            name => `${name} is injured while trying to stop the ${pickRandom(heroEnemies)}.`,
            name => `${name} fails to recover the ${pickRandom(heroItems)} from the ${pickRandom(heroLocations)}.`,
            name => `${name} is delayed by a malfunctioning ${pickRandom(heroItems)}.`,
            name => `${name} is outnumbered by the ${pickRandom(heroEnemies)}'s minions.`,
        ],
    },
    {
        description: () =>
            `A ${pickRandom(heroEvents)} threatens the ${pickRandom(heroLocations)} as the ${pickRandom(heroEnemies)} unleashes chaos.`,
        winMessages: [
            name => `${name} neutralizes the ${pickRandom(heroEnemies)} with a ${pickRandom(heroItems)}.`,
            name => `${name} evacuates the ${pickRandom(heroLocations)} just in time.`,
            name => `${name} uses quick thinking and a ${pickRandom(heroItems)} to save the day.`,
            name => `${name} disables the ${pickRandom(heroEnemies)}'s weapon.`,
            name => `${name} leads a counterattack during the ${pickRandom(heroEvents)}.`,
            name => `${name} repairs the damage at the ${pickRandom(heroLocations)}.`,
            name => `${name} outmaneuvers the ${pickRandom(heroEnemies)} with a ${pickRandom(heroItems)}.`,
            name => `${name} inspires hope during the ${pickRandom(heroEvents)}.`,
            name => `${name} captures the ${pickRandom(heroEnemies)} at the ${pickRandom(heroLocations)}.`,
            name => `${name} prevents a disaster with a ${pickRandom(heroItems)}.`,
        ],
        loseMessages: [
            name => `${name} is caught in the crossfire at the ${pickRandom(heroLocations)}.`,
            name => `${name} is too late to stop the ${pickRandom(heroEnemies)}.`,
            name => `${name} loses their ${pickRandom(heroItems)} in the chaos.`,
            name => `${name} is knocked out during the ${pickRandom(heroEvents)}.`,
            name => `${name} is trapped by the ${pickRandom(heroEnemies)}.`,
            name => `${name} is forced to abandon the ${pickRandom(heroLocations)}.`,
            name => `${name} is overwhelmed by the ${pickRandom(heroEnemies)}'s forces.`,
            name => `${name} is unable to prevent the ${pickRandom(heroEvents)}.`,
            name => `${name} is outmatched by the ${pickRandom(heroEnemies)}.`,
            name => `${name} is separated from their team at the ${pickRandom(heroLocations)}.`,
        ],
    },
    {
        description: () =>
            `During a ${pickRandom(heroEvents)}, the ${pickRandom(heroEnemies)} targets the ${pickRandom(heroLocations)} for a sinister plan.`,
        winMessages: [
            name => `${name} intercepts the ${pickRandom(heroEnemies)} with a ${pickRandom(heroItems)}.`,
            name => `${name} foils the plot at the ${pickRandom(heroLocations)}.`,
            name => `${name} uses a ${pickRandom(heroItems)} to save the city.`,
            name => `${name} defeats the ${pickRandom(heroEnemies)} in a dramatic showdown.`,
            name => `${name} uncovers the secret behind the ${pickRandom(heroEvents)}.`,
            name => `${name} disables the ${pickRandom(heroEnemies)}'s technology.`,
            name => `${name} rescues the hostages from the ${pickRandom(heroLocations)}.`,
            name => `${name} turns the ${pickRandom(heroItems)} against the ${pickRandom(heroEnemies)}.`,
            name => `${name} restores peace after the ${pickRandom(heroEvents)}.`,
            name => `${name} earns a medal for bravery at the ${pickRandom(heroLocations)}.`,
        ],
        loseMessages: [
            name => `${name} is ambushed by the ${pickRandom(heroEnemies)}.`,
            name => `${name} is caught in the aftermath of the ${pickRandom(heroEvents)}.`,
            name => `${name} loses their ${pickRandom(heroItems)} in the struggle.`,
            name => `${name} is forced to surrender at the ${pickRandom(heroLocations)}.`,
            name => `${name} is outwitted by the ${pickRandom(heroEnemies)}.`,
            name => `${name} is injured during the rescue attempt.`,
            name => `${name} is unable to stop the ${pickRandom(heroEnemies)}'s plan.`,
            name => `${name} is trapped in the ${pickRandom(heroLocations)}.`,
            name => `${name} is separated from their allies during the ${pickRandom(heroEvents)}.`,
            name => `${name} is left powerless without their ${pickRandom(heroItems)}.`,
        ],
    },
];
